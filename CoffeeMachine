MENU = {
    "espresso": {
        "ingredients": {
            "water": 50,
            "milk": 0,
            "coffee": 18,
        },
        "cost": 1.5,
    },
    "latte": {
        "ingredients": {
            "water": 200,
            "milk": 150,
            "coffee": 24,
        },
        "cost": 2.5,
    },
    "cappuccino": {
        "ingredients": {
            "water": 250,
            "milk": 100,
            "coffee": 24,
        },
        "cost": 3.0,
    }
}

resources = {
    "water": 300,
    "milk": 200,
    "coffee": 100,
    "money": 0,
}


def report(resources):
    """Returns a report of the current amount of resources"""
    print(f"Water: {resources['water']} mL")
    print(f"Milk: {resources['milk']} mL")
    print(f"Coffee: {resources['coffee']} g")
    print(f"Money: ${resources['money']}")


def enough_resources(resources, ingredient_required):
    """Returns True if ingredients are enough or False if ingredients are insufficient"""
    for item in ingredient_required:
        if ingredient_required[item] >= resources[item]:
            print(f"Sorry, there is not enough {item}.")
            return False
    return True


def process_coins():
    """Returns the total amount inserted."""
    print("Please insert coins.")
    global amount_inserted
    amount_inserted = int(input("how many quarters?: ")) * 0.25
    amount_inserted += int(input("how many dimes?: ")) * 0.1
    amount_inserted += int(input("how many nickles?: ")) * 0.05
    amount_inserted += int(input("how many pennies?: ")) * 0.01
    return amount_inserted


def enough_money(amount_inserted, MENU, selection):
    """Returns True when payment is accepted or False if amount inserted is not enough"""
    change = round(amount_inserted - float(MENU[selection]['cost']), 2)
    if amount_inserted > float(MENU[selection]['cost']):
        print(f"Here is your {selection}!")
        print(f"Your change is ${change}")
        return True
    else:
        print("Not enough money. Money is returned")
        return False


def consumed_resources(ingredients):
    "Subtracts the ingredients consumed from the resources"
    for item in ingredients:
        resources[item] -= ingredients[item]


def make_coffee():
    """Calls the functions required to process the whole operation of making coffee"""
    to_continue = True
    while to_continue:
        selection = input("What would you like? (espresso, latte, cappuccino): ").lower()
        if selection == "report":
            report(resources)
        elif selection == "off":
            to_continue = False
        elif selection not in ["espresso", "latte", "cappuccino"]:
            print("Invalid input.")
        else:
            ingredients_required = MENU[selection]['ingredients']
            drink = MENU[selection]
            if enough_resources(resources, ingredients_required):
                process_coins()
                if enough_money(amount_inserted, MENU, selection):
                    consumed_resources(drink["ingredients"])


make_coffee()
